apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.eburg_soft.tvservice"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.incremental"     : "true",
                        "room.expandProjection": "true",
                        "room.schemaLocation"  : "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    packagingOptions {
        exclude "META-INF/LICENSE*"
    }
    
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //  Android's basic libraries
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //  Material design
    def material_version = "1.2.1"
    implementation "com.google.android.material:material:$material_version"

    //  Room DB
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    //  gson
    implementation 'com.google.code.gson:gson:2.8.6'

    //  Network
    def retrofit_version = '2.9.0'
    def ok_http_version = '4.8.1'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$ok_http_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_http_version"
    implementation 'com.google.code.gson:gson:2.8.6'

    //  Dagger2 core
    def dagger_version = "2.28.3"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //  Dagger Android
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //  RxJava
//    def rxjava_version = '2.2.19'
    implementation "io.reactivex.rxjava2:rxjava:2.2.19"

    //  RxAndroid
//    def rxandroid_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    //  Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    //  Logging TimberKt
    implementation 'com.github.ajalt:timberkt:1.5.1'

    // -------- INSTRUMENTATION TESTS (use JUnit4)

    //  Architecture components tests
    def androidx_arch_test_version = "2.1.0"
    testImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"
    androidTestImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"

    // Local unit tests (use JUnit5)
    // JUnit Jupiter
    def junit5_version = "5.6.2"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    testImplementation "org.junit.vintage:junit-vintage-engine:$junit5_version"
    testImplementation "org.junit.platform:junit-platform-launcher:1.6.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.6.2"

    //  MockK tests
    def mockk_version = '1.10.0'
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"

    //  Instrumental tests
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'

    def espresso_version = '3.3.0'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"

    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'

    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.2'
    testImplementation "androidx.test.ext:junit-ktx:1.1.2"
    testImplementation "androidx.test:core-ktx:1.3.0"

    debugImplementation("androidx.fragment:fragment-testing:1.3.0-beta01")
    debugImplementation("androidx.fragment:fragment-ktx:1.3.0-beta01")
    debugImplementation("androidx.test:core:1.3.0")
    debugImplementation("androidx.test:rules:1.3.0")
    debugImplementation("androidx.test:runner:1.3.0")

    //  Stetho
    def stetho_version = '1.5.1'
    implementation "com.facebook.stetho:stetho:$stetho_version"
    implementation "com.facebook.stetho:stetho-okhttp3:$stetho_version"
    implementation "com.facebook.stetho:stetho-urlconnection:$stetho_version"
}